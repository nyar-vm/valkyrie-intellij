namespace std.native;

#transparent type char = Character;



#native
extends char {
    def is_whitespace(self) -> bool {
        @matches(self, true)
    }
    def is_false(self) -> bool {
        @matches(self, false)
    }
    def then(self) -> bool {

    }
}

#native
extends bool: Negative {
    def negative(mut self) {
        self = self.opposite()
    }
    def opposite(self) -> bool {
        self.is_false()
    }
}