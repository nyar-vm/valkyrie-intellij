<idea-plugin>
	<id>Valkyrie</id>
	<name>Valkyrie Language</name>
	<vendor>voml</vendor>
	<depends>com.intellij.modules.platform</depends>
	<!--  <depends optional="true" config-file="plugin-with-rust.xml">org.rust.lang</depends>-->
	<resource-bundle>messages.ValkyrieBundle</resource-bundle>
	<extensions defaultExtensionNs="com.intellij">
		<fileType
			name="Valkyrie"
			language="Valkyrie"
			extensions="vk;"
			implementationClass="valkyrie.language.file.ValkyrieFileType"
			fieldName="INSTANCE"/>
		<lang.parserDefinition
			language="Valkyrie"
			implementationClass="valkyrie.language.lexer.ValkyrieParserDefinition"/>
		<multiHostInjector implementation="valkyrie.ide.matcher.LanguageInjector"/>
		<!-- Project -->
		<moduleType
			implementationClass="valkyrie.ide.project.ValkyrieModuleType"
			id="VALKYRIE_MODULE_TYPE"/>
		<moduleBuilder
			builderClass="valkyrie.ide.project.ValkyrieModuleBuilder"
			id="VALKYRIE_MODULE_TYPE"
			order="first"/>
		<fileBasedIndex implementation="valkyrie.ide.project.ValkyrieFileIndex"/>
		<indexedRootsProvider implementation="valkyrie.ide.project.ExtraIndexContributor"/>
		<additionalLibraryRootsProvider implementation="valkyrie.ide.project.LibraryRootsProvider"/>
		<packageDependencies.visitor
			language="Valkyrie"
			implementationClass="valkyrie.ide.project.DependencyVisitor"/>
		<!-- StructureView -->
		<iconProvider implementation="valkyrie.language.file.ValkyrieIconProvider"/>
		<projectViewNestingRulesProvider implementation="valkyrie.language.file.ValkyrieFileGroup"/>
		<treeStructureProvider implementation="valkyrie.ide.view.VStructureProvider"/>
		<lang.structureViewExtension implementation="valkyrie.ide.view.VStructureViewExtension"/>
		<lang.psiStructureViewFactory
			language="Valkyrie"
			implementationClass="valkyrie.ide.view.StructureViewFactory"/>
		<typeHierarchyProvider
			language="Valkyrie"
			implementationClass="valkyrie.ide.reference.hierarchy.TypeHierarchyProvider"/>
		<methodHierarchyProvider
			language="Valkyrie"
			implementationClass="valkyrie.ide.reference.hierarchy.MethodHierarchyProvider"/>
		<callHierarchyProvider
			language="Valkyrie"
			implementationClass="valkyrie.ide.reference.hierarchy.CallHierarchyProvider"/>
		<!-- Highlight -->
		<colorSettingsPage implementation="valkyrie.ide.highlight.HighlightSetting"/>
		<highlightVisitor implementation="valkyrie.ide.highlight.NodeHighlighter"/>
		<lang.syntaxHighlighter
			language="Valkyrie"
			implementationClass="valkyrie.ide.highlight.TokenHighlight"
		/>
		<!-- Formatter -->
		<lang.formatter
			language="Valkyrie"
			implementationClass="valkyrie.ide.formatter.FormatBuilder"
		/>
		<lang.commenter
			language="Valkyrie"
			implementationClass="valkyrie.ide.formatter.Commenter"
		/>
		<lang.smartEnterProcessor
			language="Valkyrie"
			implementationClass="valkyrie.ide.formatter.SmartEnter"
		/>
		<!-- Goto -->
		<navbar implementation="valkyrie.ide.goto.VNavigationBarExtension"/>
		<lang.directNavigationProvider implementation="valkyrie.ide.goto.VDirectNavigationProvider"/>
		<symbolNavigation
			forClass="valkyrie.language.symbol.ValkyrieSymbol"
			implementationClass="valkyrie.ide.goto.VSymbolNavigationProvider"/>
		<codeInsight.gotoSuper language="Valkyrie" implementationClass="valkyrie.ide.goto.GotoSuper"/>
		<codeInsight.implementMethod language="Valkyrie" implementationClass="valkyrie.ide.hint.ValkyrieImplementMark"/>
		<!--		<bookmarkProvider implementation="valkyrie.ide.goto.ValkyrieBookmark"/>-->
		<!--		<bookmarksListProvider implementation="valkyrie.ide.goto.ValkyrieBookmarkList"/>-->
		<!-- Hint -->
		<codeInsight.inlayProvider
			language="Valkyrie"
			implementationClass="valkyrie.ide.hint.ValkyrieInlayTypeHint"/>
		<codeInsight.typeInfo language="Valkyrie" implementationClass="valkyrie.ide.hint.TypeInfoHint"/>
		<codeInsight.parameterInfo language="Valkyrie" implementationClass="valkyrie.ide.hint.ParameterInfoHint"/>
		<codeInsight.parameterNameHints language="Valkyrie" implementationClass="valkyrie.ide.hint.ParameterNameHint"/>
		<codeInsight.overrideMethod language="Valkyrie" implementationClass="valkyrie.ide.hint.ValkyrieOverrideMark"/>

		<codeInsight.lineMarkerProvider
			language="Valkyrie"
			implementationClass="valkyrie.ide.hint.ValkyrieClassElementMark"/>
		<runLineMarkerContributor
			language="Valkyrie"
			implementationClass="valkyrie.ide.runner.ValkyrieRunner"/>
		<vcs.codeVisionLanguageContext
			language="Valkyrie"
			implementationClass="valkyrie.ide.hint.AuthorAbove"/>
		<!--		<psi.fileReferenceHelper implementation="valkyrie.ide.reference.ValkyrieFileReference"/>-->
		<psi.referenceContributor implementation="valkyrie.ide.reference.ValkyrieReferenceContributor"/>
		<psi.symbolReferenceProvider
			anyReferenceClass="true"
			implementationClass="valkyrie.ide.reference.ValkyrieReferenceProvider"
			hostLanguage="Valkyrie"
			hostElementClass="com.intellij.psi.xml.XmlAttributeValue"
			targetClass="valkyrie.language.symbol.ValkyrieSymbol"/>
		<!-- Lint -->
		<lang.namesValidator language="Valkyrie" implementationClass="valkyrie.ide.lint.ValkyrieNameValidator"/>
		<qualifiedNameProvider implementation="valkyrie.ide.lint.ValkyrieNameQualifier"/>
		<!-- Declaration -->
		<typeDeclarationProvider implementation="valkyrie.ide.reference.declaration.TypeDeclarationProvider"/>
		<psi.declarationProvider implementation="valkyrie.ide.reference.declaration.SymbolDeclarationProvider"/>

		<!--		<declarationRangeHandler-->
		<!--			key="org.rust.lang.core.psi.ValkyrieClass"-->
		<!--			implementationClass="valkyrie.ide.reference.declaration.ClassDeclarationHandler"/>-->
		<findUsagesHandlerFactory implementation="valkyrie.ide.usages.ValkyrieUsagesFactory"/>
		<lang.findUsagesProvider
			language="Valkyrie"
			implementationClass="valkyrie.ide.usages.ValkyrieUsagesProvider"/>
		<!-- Completion -->
		<!--		<lookup.charFilter implementation="valkyrie.ide.completion.CompletionInterrupter"/>-->
		<codeCompletionConfigurable instance="valkyrie.ide.completion.CompletionConfig"/>
		<completion.contributor
			language="Valkyrie"
			implementationClass="valkyrie.ide.completion.CompletionRegistrar"/>
		<nameSuggestionProvider implementation="valkyrie.ide.completion.CompletionSuggestion"/>
		<lang.braceMatcher
			language="Valkyrie"
			implementationClass="valkyrie.ide.matcher.BraceMatchAdapter"/>
		<lang.quoteHandler
			language="Valkyrie"
			implementationClass="valkyrie.ide.matcher.QuoteHandler"/>
		<lang.foldingBuilder
			language="Valkyrie"
			implementationClass="valkyrie.ide.folding.ValkyrieFoldingBuilder"/>
		<codeFoldingOptionsProvider instance="valkyrie.ide.folding.ValkyrieFoldingOptions"/>
		<referenceImporter implementation="valkyrie.ide.completion.ValkyrieImportInsert"/>
		<lang.importOptimizer
			language="Valkyrie"
			implementationClass="valkyrie.ide.completion.ValkyrieImportOptimizer"/>
		<importFilteringRule implementation="valkyrie.ide.completion.ValkyrieImportFilter"/>
		<!-- Document -->
		<lang.documentationProvider
			language="Valkyrie"
			implementationClass="valkyrie.ide.doc.DocumentationProvider"/>
		<!--		<indexPatternBuilder-->
		<!--				implementation="valkyrie.ide.lint.VomlTodoIndexPatternBuilder"-->
		<!--		/>-->
		<!--		<todoIndexer-->
		<!--				filetype="Fluent"-->
		<!--				implementationClass="valkyrie.ide.lint.VomlTodoIndexer"-->
		<!--		/>-->
		<annotator language="Valkyrie" implementationClass="valkyrie.ide.annotator.StringChecker"/>
		<annotator language="Valkyrie" implementationClass="valkyrie.ide.annotator.NumberChecker"/>
		<annotator language="Valkyrie" implementationClass="valkyrie.ide.annotator.MarkImplicitTypes"/>
		<annotator language="Valkyrie" implementationClass="valkyrie.ide.annotator.MarkLegacyExpression"/>
		<langCodeStyleSettingsProvider
			implementation="valkyrie.ide.codeStyle.ValkyrieCodeStyleSetting"
		/>
	</extensions>
	<actions>
		<action id="NewFluentFile" class="valkyrie.ide.actions.ValkyrieCreateFile">
			<add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewHtmlFile"/>
		</action>
		<action id="jss.JssConvertJson" class="valkyrie.ide.actions.FluentConvertMo"/>
		<group id="jss.JssGenerator" popup="true" text="JssGenerator">
			<reference ref="NewFluentFile"/>
			<reference ref="jss.JssConvertJson"/>
			<add-to-group group-id="EditorPopupMenu" anchor="after" relative-to-action="Github.Create.Gist"/>
			<add-to-group group-id="ProjectViewPopupMenu" anchor="after" relative-to-action="Github.Create.Gist"/>
			<add-to-group group-id="EditorTabPopupMenu" anchor="after" relative-to-action="Github.Create.Gist"/>
			<add-to-group group-id="ConsoleEditorPopupMenu" anchor="after" relative-to-action="Github.Create.Gist"/>
		</group>
	</actions>
</idea-plugin>
