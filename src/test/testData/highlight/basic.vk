namespace ad.bd.cd

let a = true;


value function package::path::range(min: int, max: int, step: int): Range {
    new lazy path::Range::<T>() {from: min, till: max, step, _current: min}
}

trait TestTrait {

}



function test(a: A = 2, bb: AType = null) -> ReturnType {
    lambda ();
    true || false && null;
    TestClass();
}


std::test::<T>(arg)[index];
std::test⦓T⦔(arg)⁅index⁆;


a?.like

a?()


30℃ == 60℉;

for i in tes {
    +retst
}


