namespace ad.bd.cd

let a = true;





trait TestTrait {

}



function test(a: A = 2, bb: AType = null) -> ReturnType {
    lambda ();
    true || false && null;
    TestClass();
}


std::test::<T>(arg)[index];
std::test⦓T⦔(arg)⁅index⁆;


a?.like

a?()


30℃ == 60℉;

for i in tes {
    +retst
}
test.call(test) {

}?
.match {
with id:
yyy
when a>0:
xxx
}?
.catch {

}