namespace ad::bd::cd

let ak = true;


#call
class TestClass {
#call
readonly field1: u32,
readonly field2: f64;
}

extends TestClass {

}

union TestUnion {

}

trait TestTrait {

}



def function(aa: AType = 22, bb: AType = null) -> ReturnType {
let ak = true || false && null;
}


for ii in ee {
aa + (bb / ee - cc) * dd
}